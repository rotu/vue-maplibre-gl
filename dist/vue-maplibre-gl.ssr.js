"use strict";var Ce=Object.defineProperty;var we=(e,o,n)=>o in e?Ce(e,o,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[o]=n;var v=(e,o,n)=>(we(e,typeof o!="symbol"?o+"":o,n),n);const t=require("vue"),_=require("maplibre-gl"),f=Symbol("map"),g=Symbol("isLoaded"),y=Symbol("componentId"),p=Symbol("sourceId"),b=Symbol("sourceLayerRegistry"),M=Symbol("emitter"),m=t.reactive({style:"https://demotiles.maplibre.org/style.json",center:Object.freeze([0,0]),zoom:1,trackResize:!1});class w{static createEventHandler(o,n,a,r){return(i={})=>a.emit(r,{type:i.type,map:n,component:o,event:i})}}v(w,"MAP_OPTION_KEYS",["antialias","attributionControl","bearing","bearingSnap","bounds","boxZoom","center","clickTolerance","collectResourceTiming","crossSourceCollisions","container","customAttribution","dragPan","dragRotate","doubleClickZoom","hash","fadeDuration","failIfMajorPerformanceCaveat","fitBoundsOptions","interactive","keyboard","locale","localIdeographFontFamily","logoPosition","maxBounds","maxPitch","maxZoom","minPitch","minZoom","preserveDrawingBuffer","pitch","pitchWithRotate","refreshExpiredTiles","renderWorldCopies","scrollZoom","mapStyle","trackResize","transformRequest","touchZoomRotate","touchPitch","zoom","maxTileCacheSize","accessToken"]),v(w,"MARKER_OPTION_KEYS",["element","offset","anchor","color","draggable","clickTolerance","rotation","rotationAlignment","pitchAlignment","scale"]),v(w,"MAP_EVENT_TYPES",["error","load","idle","remove","render","resize","webglcontextlost","webglcontextrestored","dataloading","data","tiledataloading","sourcedataloading","styledataloading","sourcedata","styledata","boxzoomcancel","boxzoomstart","boxzoomend","touchcancel","touchmove","touchend","touchstart","click","contextmenu","dblclick","mousemove","mouseup","mousedown","mouseout","mouseover","movestart","move","moveend","zoomstart","zoom","zoomend","rotatestart","rotate","rotateend","dragstart","drag","dragend","pitchstart","pitch","pitchend","wheel"]);var L=(e=>(e.TOP_LEFT="top-left",e.TOP_RIGHT="top-right",e.BOTTOM_LEFT="bottom-left",e.BOTTOM_RIGHT="bottom-right",e))(L||{});const j=Object.values(L);function x(e,o,n){t.watch(e,a=>{a&&j.indexOf(a)===-1||(o.value.hasControl(n)&&o.value.removeControl(n),o.value.addControl(n,a))},{immediate:!0})}function Me(e){return{all:e=e||new Map,on:function(o,n){var a=e.get(o);a?a.push(n):e.set(o,[n])},off:function(o,n){var a=e.get(o);a&&(n?a.splice(a.indexOf(n)>>>0,1):e.set(o,[]))},emit:function(o,n){var a=e.get(o);a&&a.slice().map(function(r){r(n)}),(a=e.get("*"))&&a.slice().map(function(r){r(o,n)})}}}const F=new Map,G=Symbol("default");function Oe(e=G){let o=F.get(e);return o||(o=t.reactive({isLoaded:!1,isMounted:!1}),F.set(e,o)),o}function Le(e,o=G){var a;let n=F.get(o);return n||(n=t.reactive({isLoaded:!1,isMounted:!1}),F.set(o,n)),n.isLoaded=!1,n.isMounted=!1,n.component=e,n.map=e.map,n.isLoaded=((a=e.map)==null?void 0:a.loaded())||!1,n}function je(e,o=250,n=!1){let a;function r(){const i=arguments,l=()=>{a=void 0,n!==!0&&e.apply(this,i)};clearTimeout(a),n===!0&&a===void 0&&e.apply(this,i),a=window.setTimeout(l,o)}return r.cancel=()=>{clearTimeout(a)},r}const D=t.defineComponent({name:"MglMap",props:{width:{type:[Number,String],default:"100%"},height:{type:[Number,String],default:"100%"},antialias:{type:Boolean,default:()=>m.antialias},attributionControl:{type:Boolean,default:()=>m.attributionControl},bearing:{type:Number,default:()=>m.bearing},bearingSnap:{type:Number,default:()=>m.bearingSnap},bounds:{type:[Array,Object],default:()=>m.bounds},boxZoom:{type:Boolean,default:()=>m.boxZoom},center:{type:[Array,Object],default:()=>m.center},clickTolerance:{type:Number,default:()=>m.clickTolerance},collectResourceTiming:{type:Boolean,default:()=>m.collectResourceTiming},crossSourceCollisions:{type:Boolean,default:()=>m.crossSourceCollisions},customAttribution:{type:[String,Array],default:()=>m.customAttribution},dragPan:{type:Boolean,default:()=>m.dragPan},dragRotate:{type:Boolean,default:()=>m.dragRotate},doubleClickZoom:{type:Boolean,default:()=>m.doubleClickZoom},hash:{type:[Boolean,String],default:()=>m.hash},fadeDuration:{type:Number,default:()=>m.fadeDuration},failIfMajorPerformanceCaveat:{type:Boolean,default:()=>m.failIfMajorPerformanceCaveat},fitBoundsOptions:{type:Object,default:()=>m.fitBoundsOptions},interactive:{type:Boolean,default:()=>m.interactive},keyboard:{type:Boolean,default:()=>m.keyboard},locale:{type:Object,default:()=>m.locale},localIdeographFontFamily:{type:String,default:()=>m.localIdeographFontFamily},logoPosition:{type:[String],validate:e=>e in L,default:()=>m.logoPosition},maxBounds:{type:[Array,Object],default:()=>m.maxBounds},maxPitch:{type:Number,default:()=>m.maxPitch},maxZoom:{type:Number,default:()=>m.maxZoom},minPitch:{type:Number,default:()=>m.minPitch},minZoom:{type:Number,default:()=>m.minZoom},preserveDrawingBuffer:{type:Boolean,default:()=>m.preserveDrawingBuffer},pitch:{type:Number,default:()=>m.pitch},pitchWithRotate:{type:Boolean,default:()=>m.pitchWithRotate},refreshExpiredTiles:{type:Boolean,default:()=>m.refreshExpiredTiles},renderWorldCopies:{type:Boolean,default:()=>m.renderWorldCopies},scrollZoom:{type:Boolean,default:()=>m.scrollZoom},mapStyle:{type:[String,Object],default:()=>m.style},trackResize:{type:Boolean,default:()=>m.trackResize},transformRequest:{type:Function,default:m.transformRequest},touchZoomRotate:{type:Boolean,default:()=>m.touchZoomRotate},touchPitch:{type:Boolean,default:()=>m.touchPitch},zoom:{type:Number,default:()=>m.zoom},maxTileCacheSize:{type:Number,default:()=>m.maxTileCacheSize},accessToken:{type:String,default:()=>m.accessToken},mapKey:{type:[String,Symbol]}},emits:["map:error","map:load","map:idle","map:remove","map:render","map:resize","map:webglcontextlost","map:webglcontextrestored","map:dataloading","map:data","map:tiledataloading","map:sourcedataloading","map:styledataloading","map:sourcedata","map:styledata","map:boxzoomcancel","map:boxzoomstart","map:boxzoomend","map:touchcancel","map:touchmove","map:touchend","map:touchstart","map:click","map:contextmenu","map:dblclick","map:mousemove","map:mouseup","map:mousedown","map:mouseout","map:mouseover","map:movestart","map:move","map:moveend","map:zoomstart","map:zoom","map:zoomend","map:rotatestart","map:rotate","map:rotateend","map:dragstart","map:drag","map:dragend","map:pitchstart","map:pitch","map:pitchend","map:wheel"],setup(e,o){const n=t.markRaw(t.getCurrentInstance()),a=t.shallowRef(null),r=t.shallowRef(null),i=t.shallowRef(null),l=t.ref(!1),d=t.ref(!1),u=new Map,h=Me(),O=Le(n,e.mapKey);let A;return t.provide(f,i),t.provide(g,d),t.provide(y,n.uid),t.provide(p,""),t.provide(M,h),t.watch(()=>e.bearing,c=>{var s;c&&((s=i.value)==null||s.setBearing(c))}),t.watch(()=>e.bounds,c=>{var s;c&&((s=i.value)==null||s.fitBounds(c,e.fitBoundsOptions))}),t.watch(()=>e.center,c=>{var s;c&&((s=i.value)==null||s.setCenter(c))}),t.watch(()=>e.maxBounds,c=>{var s;c&&((s=i.value)==null||s.setMaxBounds(c))}),t.watch(()=>e.maxPitch,c=>{var s;c&&((s=i.value)==null||s.setMaxPitch(c))}),t.watch(()=>e.maxZoom,c=>{var s;c&&((s=i.value)==null||s.setMaxZoom(c))}),t.watch(()=>e.minPitch,c=>{var s;c&&((s=i.value)==null||s.setMinPitch(c))}),t.watch(()=>e.minZoom,c=>{var s;c&&((s=i.value)==null||s.setMinZoom(c))}),t.watch(()=>e.pitch,c=>{var s;c&&((s=i.value)==null||s.setPitch(c))}),t.watch(()=>e.renderWorldCopies,c=>{var s;c&&((s=i.value)==null||s.setRenderWorldCopies(c))}),t.watch(()=>e.mapStyle,c=>{var s;c&&((s=i.value)==null||s.setStyle(c))}),t.watch(()=>e.transformRequest,c=>{var s;c&&((s=i.value)==null||s.setTransformRequest(c))}),t.watch(()=>e.zoom,c=>{var s;c&&((s=i.value)==null||s.setZoom(c))}),t.watch(()=>e.zoom,c=>{var s;c&&((s=i.value)==null||s.setZoom(c))}),t.onMounted(()=>{O.isMounted=!0;const c=Object.keys(e).filter(s=>e[s]!==void 0&&w.MAP_OPTION_KEYS.indexOf(s)!==-1).reduce((s,S)=>(s[S==="mapStyle"?"style":S]=t.unref(e[S]),s),{container:r.value});if(i.value=t.markRaw(new _.Map(c)),O.map=i.value,l.value=!0,u.set("__load",()=>(d.value=!0,O.isLoaded=!0)),i.value.on("load",u.get("__load")),n.vnode.props){for(let s=0,S=w.MAP_EVENT_TYPES.length;s<S;s++)if(n.vnode.props["onMap:"+w.MAP_EVENT_TYPES[s]]){const V=w.createEventHandler(n,i.value,o,"map:"+w.MAP_EVENT_TYPES[s]);u.set(w.MAP_EVENT_TYPES[s],V),i.value.on(w.MAP_EVENT_TYPES[s],V)}}A=new ResizeObserver(je(i.value.resize.bind(i.value),100)),A.observe(r.value)}),t.onBeforeUnmount(()=>{O.isMounted=!1,O.isLoaded=!1,A&&A.disconnect(),i.value&&u.forEach((c,s)=>{i.value.off(s.startsWith("__")?s.substr(2):s,c)})}),{map:i,componentContainer:a,container:r,isLoaded:d,isInitialized:l}},render(){return t.h("div",{ref:"componentContainer",class:"mgl-container",style:{height:this.$props.height,width:this.$props.width}},[t.h("div",{ref:"container",class:"mgl-wrapper"}),this.isInitialized&&this.$slots.default?this.$slots.default():void 0])}}),Y=t.defineComponent({name:"MglAttributionControl",props:{position:{type:String,validator:e=>j.indexOf(e)!==-1},compact:Boolean,customAttribution:[String,Array]},setup(e){const o=t.inject(f),n=new _.AttributionControl({compact:e.compact,customAttribution:e.customAttribution});x(()=>e.position,o,n),t.onBeforeUnmount(()=>o.value.removeControl(n))},render(){}}),E=class{constructor(o,n){v(this,"container");this.isAdded=o,this.container=document.createElement("div"),this.setClasses(n)}getDefaultPosition(){return L.TOP_LEFT}onAdd(){return t.nextTick(()=>this.isAdded.value=!0),this.container}onRemove(){this.isAdded.value=!1,this.container.remove()}setClasses(o){o?(this.container.classList.remove(E.CONTROL_CLASS),this.container.classList.remove(E.CONTROL_GROUP_CLASS)):(this.container.classList.add(E.CONTROL_CLASS),this.container.classList.add(E.CONTROL_GROUP_CLASS))}};let k=E;v(k,"CONTROL_CLASS","maplibregl-ctrl"),v(k,"CONTROL_GROUP_CLASS","maplibregl-ctrl-group");const K=t.defineComponent({name:"MglCustomControl",props:{position:{type:String,validator:e=>j.indexOf(e)!==-1},noClasses:{type:Boolean,default:!1}},setup(e){const o=t.inject(f),n=t.ref(!1),a=new k(n,e.noClasses);return x(()=>e.position,o,a),t.watch(()=>e.noClasses,r=>a.setClasses(r)),t.onBeforeUnmount(()=>{o.value.removeControl(a)}),{isAdded:n,container:a.container}},render(){return this.isAdded?t.h(t.Teleport,{to:this.container},this.$slots.default?this.$slots.default():void 0):t.createCommentVNode("custom-component")}}),J=t.defineComponent({name:"MglFullscreenControl",props:{position:{type:String,default:L.TOP_RIGHT,validator:e=>j.indexOf(e)!==-1},container:{type:HTMLElement,default:null}},setup(e){const o=t.inject(f),n=new _.FullscreenControl(e.container?{container:e.container}:void 0);x(()=>e.position,o,n),t.onBeforeUnmount(()=>o.value.removeControl(n))},render(){}});class xe{constructor(o="rgba(0,0,0,0.9)",n=4*window.devicePixelRatio,a="#7cf859",r="Monaco, Consolas, Courier, monospace",i=60*window.devicePixelRatio,l=90*window.devicePixelRatio,d=0,u=5*window.devicePixelRatio,h=100*window.devicePixelRatio){v(this,"frames",0);v(this,"totalTime",0);v(this,"totalFrames",0);v(this,"time",null);v(this,"map");v(this,"container");v(this,"readOutput");v(this,"canvas");v(this,"eventHandlers",new Map);this.background=o,this.barWidth=n,this.color=a,this.font=r,this.graphHeight=i,this.graphWidth=l,this.graphTop=d,this.graphRight=u,this.width=h}getDefaultPosition(){return L.TOP_RIGHT}onAdd(o){this.map=o;const n=this.container=document.createElement("div");return n.className="mapboxgl-ctrl mapboxgl-ctrl-fps",n.style.backgroundColor=this.background,n.style.borderRadius="6px",this.readOutput=document.createElement("div"),this.readOutput.style.color=this.color,this.readOutput.style.fontFamily=this.font,this.readOutput.style.padding="0 5px 5px",this.readOutput.style.fontSize="9px",this.readOutput.style.fontWeight="bold",this.readOutput.textContent="Waiting\u2026",this.canvas=document.createElement("canvas"),this.canvas.className="mapboxgl-ctrl-canvas",this.canvas.width=this.width,this.canvas.height=this.graphHeight,this.canvas.style.cssText=`width: ${this.width/window.devicePixelRatio}px; height: ${this.graphHeight/window.devicePixelRatio}px;`,n.appendChild(this.readOutput),n.appendChild(this.canvas),this.eventHandlers.set("movestart",this.onMoveStart.bind(this)),this.eventHandlers.set("moveend",this.onMoveEnd.bind(this)),this.map.on("movestart",this.eventHandlers.get("movestart")),this.map.on("moveend",this.eventHandlers.get("moveend")),this.container}onRemove(){this.map.off("movestart",this.eventHandlers.get("movestart")),this.map.off("moveend",this.eventHandlers.get("moveend")),this.eventHandlers.clear(),this.container.parentNode.removeChild(this.container),this.map=void 0}onMoveStart(){this.frames=0,this.time=performance.now(),this.eventHandlers.set("render",this.onRender.bind(this)),this.map.on("render",this.eventHandlers.get("render"))}onMoveEnd(){const o=performance.now();this.updateGraph(this.getFPS(o)),this.frames=0,this.time=null,this.map.off("render",this.eventHandlers.get("render"))}onRender(){if(this.time){this.frames++;const o=performance.now();o>=this.time+1e3&&(this.updateGraph(this.getFPS(o)),this.frames=0,this.time=performance.now())}}getFPS(o){return this.totalTime+=o-this.time,this.totalFrames+=this.frames,Math.round(1e3*this.frames/(o-this.time))||0}updateGraph(o){const n=this.canvas.getContext("2d"),a=Math.round(1e3*this.totalFrames/this.totalTime)||0,r=(this.graphHeight,this.barWidth);n.fillStyle=this.background,n.globalAlpha=1,n.fillRect(0,0,this.graphWidth,this.graphTop),n.fillStyle=this.color,this.readOutput.textContent=`${o} FPS (${a} Avg)`,n.drawImage(this.canvas,this.graphRight+r,this.graphTop,this.graphWidth-r,this.graphHeight,this.graphRight,this.graphTop,this.graphWidth-r,this.graphHeight),n.fillRect(this.graphRight+this.graphWidth-r,this.graphTop,r,this.graphHeight),n.fillStyle=this.background,n.globalAlpha=.75,n.fillRect(this.graphRight+this.graphWidth-r,this.graphTop,r,(1-o/100)*this.graphHeight)}}const X=t.defineComponent({name:"MglFrameRateControl",props:{position:{type:String,validator:e=>j.indexOf(e)!==-1},background:{type:String,default:"rgba(0,0,0,0.9)"},barWidth:{type:Number,default:4*window.devicePixelRatio},color:{type:String,default:"#7cf859"},font:{type:String,default:"Monaco, Consolas, Courier, monospace"},graphHeight:{type:Number,default:60*window.devicePixelRatio},graphWidth:{type:Number,default:90*window.devicePixelRatio},graphTop:{type:Number,default:0},graphRight:{type:Number,default:5*window.devicePixelRatio},width:{type:Number,default:100*window.devicePixelRatio}},setup(e){const o=t.inject(f),n=new xe(e.background,e.barWidth,e.color,e.font,e.graphHeight,e.graphWidth,e.graphTop,e.graphRight,e.width);x(()=>e.position,o,n),t.onBeforeUnmount(()=>o.value.removeControl(n))},render(){}}),Q=t.defineComponent({name:"MglGeolocationControl",props:{position:{type:String,default:L.TOP_RIGHT,validator:e=>j.indexOf(e)!==-1},positionOptions:{type:Object,default:{enableHighAccuracy:!1,timeout:6e3}},fitBoundsOptions:{type:Object,default:{maxZoom:15}},trackUserLocation:{type:Boolean,default:!1},showAccuracyCircle:{type:Boolean,default:!0},showUserLocation:{type:Boolean,default:!0}},setup(e){const o=t.inject(f),n=new _.GeolocateControl({positionOptions:e.positionOptions,fitBoundsOptions:e.fitBoundsOptions,trackUserLocation:e.trackUserLocation,showAccuracyCircle:e.showAccuracyCircle,showUserLocation:e.showUserLocation});x(()=>e.position,o,n),t.onBeforeUnmount(()=>o.value.removeControl(n))},render(){}}),ee=t.defineComponent({name:"MglNavigationControl",props:{position:{type:String,default:L.TOP_RIGHT,validator:e=>j.indexOf(e)!==-1},showCompass:{type:Boolean,default:!0},showZoom:{type:Boolean,default:!0},visualizePitch:Boolean},setup(e){const o=t.inject(f),n=new _.NavigationControl({showCompass:e.showCompass,showZoom:e.showZoom,visualizePitch:e.visualizePitch});x(()=>e.position,o,n),t.onBeforeUnmount(()=>o.value.removeControl(n))},render(){}});var te=(e=>(e.IMPERIAL="imperial",e.METRIC="metric",e.NAUTICAL="nautical",e))(te||{});const Re=Object.values(te),oe=t.defineComponent({name:"MglScaleControl",props:{position:{type:String,validator:e=>j.indexOf(e)!==-1},maxWidth:{type:Number,default:100},unit:{type:String,default:"metric",validator:e=>Re.indexOf(e)!==-1}},setup(e){const o=t.inject(f),n=new _.ScaleControl({maxWidth:e.maxWidth,unit:e.unit});x(()=>e.position,o,n),t.onBeforeUnmount(()=>o.value.removeControl(n))},render(){}});var U=(e=>(e.DEFAULT="default",e.TEXT="text",e.MDI="mdi",e.SIMPLE_ICON="simple-icons",e))(U||{});const Ie=Object.values(U),H={text:void 0,mdi:{size:21,viewbox:"0 0 24 24"},["simple-icons"]:{size:21,viewbox:"0 0 24 24"},default:{size:0,viewbox:"0 0 0 0"}},Z=t.defineComponent({name:"MglButton",props:{type:{type:String,default:"default",validator:e=>Ie.indexOf(e)!==-1},path:{type:String},size:Number,viewbox:String},setup(e){!e.path&&e.type!=="text"&&t.warn("property `path` must be set on MaplibreButton");const o=t.ref(H[e.type]||H.default);return t.watch(()=>e.type,n=>o.value=H[n]||H.default),{defaults:o}},render(){return this.type==="text"?t.h("button",{type:"button"},this.$slots.default?this.$slots.default():void 0):t.h("button",{type:"button",class:"maplibregl-ctrl-icon"},[t.h("svg",{width:this.size||this.defaults.size,height:this.size||this.defaults.size,viewBox:this.viewbox||this.defaults.viewbox},t.h("path",{fill:"currentColor",d:this.path})),this.$slots.default?this.$slots.default():void 0])}});var Te="M12,18.54L19.37,12.8L21,14.07L12,21.07L3,14.07L4.62,12.81L12,18.54M12,16L3,9L12,2L21,9L12,16M12,4.53L6.26,9L12,13.47L17.74,9L12,4.53Z";function q(e){return e&&!!e.stopPropagation}const ne=t.defineComponent({name:"MglStyleSwitchControl",props:{position:{type:String,validator:e=>j.indexOf(e)!==-1},mapStyles:{type:Array,required:!0,default:[]},modelValue:{type:Object},isOpen:{type:Boolean,default:void 0}},emits:["update:modelValue","update:isOpen"],setup(e,o){const n=t.inject(f),a=t.inject(g),r=t.inject(M),i=t.ref(!1),l=t.ref(e.isOpen===void 0?!1:e.isOpen),d=t.ref(e.modelValue===void 0?e.mapStyles.length?e.mapStyles[0]:null:e.modelValue),u=new k(i,!1),h=c.bind(null,!1);function O(){const s=n.value.getStyle().name;for(let S=0,V=e.mapStyles.length;S<V;S++)if(e.mapStyles[S].name===s){A(e.mapStyles[S]);break}}t.watch(a,s=>{s&&O()},{immediate:!0}),n.value.on("style.load",O),document.addEventListener("click",h),x(()=>e.position,n,u),e.modelValue!==void 0&&t.watch(()=>e.modelValue,s=>{s!==void 0&&(d.value=s)}),e.isOpen!==void 0&&t.watch(()=>e.isOpen,s=>{s!==void 0&&(l.value=s)}),t.onBeforeUnmount(()=>{n.value.removeControl(u),n.value.off("style.load",O),document.removeEventListener("click",h)});function A(s){var S;((S=d.value)==null?void 0:S.name)!==s.name&&(r.emit("styleSwitched",s),n.value.setStyle(s.style),e.modelValue===void 0&&(d.value=s),o.emit("update:modelValue",s),c(!1))}function c(s,S){q(S)?S.stopPropagation():q(s)&&s.stopPropagation(),!(e.isOpen!==void 0&&e.isOpen===s||l.value===s)&&(e.isOpen===void 0?(l.value=typeof s=="boolean"?s:!l.value,o.emit("update:isOpen",l.value)):o.emit("update:isOpen",typeof s=="boolean"?s:!e.isOpen))}return{isAdded:i,container:u.container,setStyle:A,toggleOpen:c,intIsOpen:l,intModelValue:d}},template:`
		<div class="maplibregl-ctrl maplibregl-ctrl-group">
		<slot>
			<slot name="button">
				<button type="button" class="maplibregl-ctrl-icon maplibregl-style-switch"></button>
			</slot>
			<slot name="styleList">
				<div class="maplibregl-style-list" style="display: none;">
					<button type="button" class="Dark" data-uri="&quot;mapbox://styles/mapbox/dark-v10&quot;">Dark</button>
					<button type="button" class="Light" data-uri="&quot;mapbox://styles/mapbox/light-v10&quot;">Light</button>
					<button type="button" class="Outdoors" data-uri="&quot;mapbox://styles/mapbox/outdoors-v11&quot;">Outdoors</button>
					<button type="button" class="Satellite" data-uri="&quot;mapbox://styles/mapbox/satellite-streets-v11&quot;">Satellite</button>
					<button type="button" class="Streets active" data-uri="&quot;mapbox://styles/mapbox/streets-v11&quot;">Streets</button>
				</div>
			</slot>
		</slot>
		</div>
	`,render(){if(!this.isAdded)return t.createCommentVNode("style-switch-control");const e={isOpen:this.intIsOpen,currentStyle:this.intModelValue,mapStyles:this.mapStyles,toggleOpen:this.toggleOpen,setStyle:this.setStyle};return t.h(t.Teleport,{to:this.container},t.renderSlot(this.$slots,"default",e,()=>[t.renderSlot(this.$slots,"button",e,()=>[t.h(Z,{type:U.MDI,path:Te,class:["maplibregl-ctrl-icon maplibregl-style-switch",this.intIsOpen?"is-open":""],onClick:this.toggleOpen.bind(null,!0)})]),t.renderSlot(this.$slots,"styleList",e,()=>[t.h("div",{class:["maplibregl-style-list",this.intIsOpen?"is-open":""]},this.mapStyles.map(o=>{var n,a;return o.icon?t.h(Z,{type:U.MDI,path:o.icon.path,class:((n=this.intModelValue)==null?void 0:n.name)===o.name?"is-active":"",onClick:()=>this.setStyle(o)},t.createTextVNode(o.label)):t.h("button",{type:"button",class:((a=this.intModelValue)==null?void 0:a.name)===o.name?"is-active":"",onClick:()=>this.setStyle(o)},t.createTextVNode(o.label))}))])]))}}),ae=t.defineComponent({name:"MglMarker",props:{coordinates:{type:[Object,Array],required:!0},offset:[Object,Array],anchor:String,color:String,clickTolerance:Number,rotation:Number,rotationAlignment:String,pitchAlignment:String,scale:Number},setup(e){const o=t.inject(f),n=Object.keys(e).filter(r=>e[r]!==void 0&&w.MARKER_OPTION_KEYS.indexOf(r)!==-1).reduce((r,i)=>(r[i]=t.unref(e[i]),r),{}),a=new _.Marker(n);return a.setLngLat(e.coordinates).addTo(o.value),t.watch(()=>e.coordinates,r=>a.setLngLat(r)),t.watch(()=>e.offset,r=>a.setOffset(r||[0,0])),t.watch(()=>e.pitchAlignment,r=>a.setPitchAlignment(r||"auto")),t.watch(()=>e.rotationAlignment,r=>a.setRotationAlignment(r||"auto")),t.onBeforeUnmount(a.remove.bind(a)),{marker:a}},render(){}});function Ne(e,o,n){return Object.keys(o).filter(a=>o[a]!==void 0&&n.indexOf(a)!==-1).reduce((a,r)=>(a[r]=t.unref(o[r]),a),{type:e})}const W=new Map;function C(e,o){const n=typeof o=="string",a=String(e)+(n?o:"");let r=W.get(a);return r||(r=t.ref(n?null:void 0),W.set(a,r)),r}function B(e,o,n,a,r,i,l,d){function u(){n.value&&(e.value.addSource(r.sourceId,Ne(i,r,l)),o.value=e.value.getSource(r.sourceId))}function h(){o.value=null}return t.watch(n,u,{immediate:!0}),e.value.on("style.load",u),a.on("styleSwitched",h),t.onBeforeUnmount(()=>{n.value&&(d.unmount(),e.value.removeSource(r.sourceId)),e.value.off("style.load",u),a.off("styleSwitched",h)})}class z{constructor(){v(this,"unmountHandlers",new Map)}registerUnmountHandler(o,n){this.unmountHandlers.set(o,n)}unregisterUnmountHandler(o){this.unmountHandlers.delete(o)}unmount(){this.unmountHandlers.forEach(o=>o())}}const Pe=["animate","coordinates","canvas"],re=t.defineComponent({name:"MglCanvasSource",props:{sourceId:{type:String,required:!0},coordinates:Array,animate:Boolean,canvas:[HTMLCanvasElement,String]},setup(e){const o=t.inject(f),n=t.inject(g),a=t.inject(M),r=t.inject(y),i=C(r,e.sourceId),l=new z;return t.provide(p,e.sourceId),t.provide(b,l),B(o,i,n,a,e,"canvas",Pe,l),t.watch(()=>e.coordinates,d=>{var u;return(u=i.value)==null?void 0:u.setCoordinates(d||[])}),{source:i}},render(){return[t.createCommentVNode("Canvas Source"),this.source&&this.$slots.default?this.$slots.default():void 0]}}),Ae=["data","maxzoom","attribution","buffer","tolerance","cluster","clusterRadius","clusterMaxZoom","clusterMinPoints","clusterProperties","lineMetrics","generateId","promoteId","filter"],ie=t.defineComponent({name:"MglGeoJsonSource",props:{sourceId:{type:String,required:!0},data:[Object,String],maxzoom:Number,attribution:String,buffer:Number,tolerance:Number,cluster:[Number,Boolean],clusterRadius:Number,clusterMaxZoom:Number,clusterMinPoints:Number,clusterProperties:Object,lineMetrics:Boolean,generateId:Boolean,promoteId:Object,filter:[Array,String,Object]},setup(e){const o=t.inject(f),n=t.inject(g),a=t.inject(M),r=t.inject(y),i=C(r,e.sourceId),l=new z;return t.provide(p,e.sourceId),t.provide(b,l),B(o,i,n,a,e,"geojson",Ae,l),t.watch(t.isRef(e.data)?e.data:()=>e.data,d=>{var u;return(u=i.value)==null?void 0:u.setData(d||{type:"FeatureCollection",features:[]})}),{source:i}},render(){return[t.createCommentVNode("GeoJSON Source"),this.source&&this.$slots.default?this.$slots.default():void 0]}}),_e=["url","coordinates"],se=t.defineComponent({name:"MglImageSource",props:{sourceId:{type:String,required:!0},url:String,coordinates:Array},setup(e){const o=t.inject(f),n=t.inject(g),a=t.inject(M),r=t.inject(y),i=C(r,e.sourceId),l=new z;return t.provide(p,e.sourceId),t.provide(b,l),B(o,i,n,a,e,"image",_e,l),t.watch(()=>e.coordinates,d=>{var u;return(u=i.value)==null?void 0:u.setCoordinates(d||[])}),{source:i}},render(){return[t.createCommentVNode("Image Source"),this.source&&this.$slots.default?this.$slots.default():void 0]}}),Be=["url","tiles","bounds","minzoom","maxzoom","tileSize","scheme","attribution"],le=t.defineComponent({name:"MglRasterSource",props:{sourceId:{type:String,required:!0},url:String,tiles:Array,bounds:Array,minzoom:Number,maxzoom:Number,tileSize:Number,scheme:String,attribution:String},setup(e){const o=t.inject(f),n=t.inject(g),a=t.inject(M),r=t.inject(y),i=C(r,e.sourceId),l=new z;return t.provide(p,e.sourceId),t.provide(b,l),B(o,i,n,a,e,"raster",Be,l),{source:i}},render(){return t.createCommentVNode("Video Source")}}),ze=["url","tiles","bounds","minzoom","maxzoom","tileSize","attribution","encoding"],ue=t.defineComponent({name:"MglRasterDemSource",props:{sourceId:{type:String,required:!0},url:String,tiles:Array,bounds:Array,minzoom:Number,maxzoom:Number,tileSize:Number,attribution:String,encoding:String},setup(e){const o=t.inject(f),n=t.inject(g),a=t.inject(M),r=t.inject(y),i=C(r,e.sourceId),l=new z;return t.provide(p,e.sourceId),t.provide(b,l),B(o,i,n,a,e,"raster-dem",ze,l),{source:i}},render(){return t.createCommentVNode("Video Source")}}),ke=["url","tiles","bounds","scheme","minzoom","maxzoom","attribution","promoteId"],ce=t.defineComponent({name:"MglVectorSource",props:{sourceId:{type:String,required:!0},url:String,tiles:Array,bounds:Array,scheme:String,minzoom:Number,maxzoom:Number,attribution:String,promoteId:Object},setup(e){const o=t.inject(f),n=t.inject(g),a=t.inject(M),r=t.inject(y),i=C(r,e.sourceId),l=new z;return t.provide(p,e.sourceId),t.provide(b,l),B(o,i,n,a,e,"vector",ke,l),t.watch(()=>e.tiles,d=>{var u;return(u=i.value)==null?void 0:u.setTiles(d||[])}),t.watch(()=>e.url,d=>{var u;return(u=i.value)==null?void 0:u.setUrl(d||"")}),{source:i}},render(){return t.createCommentVNode("Vector Source")}}),Ee=["urls","coordinates"],de=t.defineComponent({name:"MglVideoSource",props:{sourceId:{type:String,required:!0},urls:Array,coordinates:Array},setup(e){const o=t.inject(f),n=t.inject(g),a=t.inject(M),r=t.inject(y),i=C(r,e.sourceId),l=new z;return t.provide(p,e.sourceId),t.provide(b,l),B(o,i,n,a,e,"video",Ee,l),t.watch(()=>e.coordinates,d=>{var u;return(u=i.value)==null?void 0:u.setCoordinates(d||[])}),{source:i}},render(){return t.createCommentVNode("Video Source")}}),Ve=["metadata","ref","source","sourceLayer","minzoom","maxzoom","interactive","filter","layout","paint"],T=["click","dblclick","mousedown","mouseup","mousemove","mouseenter","mouseleave","mouseover","mouseout","contextmenu","touchstart","touchend","touchcancel"],R=t.defineComponent({props:{layerId:{type:String,required:!0},source:[String,Object],metadata:[Object,Array,String,Number],ref:String,sourceLayer:String,minzoom:Number,maxzoom:Number,interactive:Boolean,filter:Array,before:String},emit:["click","dblclick","mousedown","mouseup","mousemove","mouseenter","mouseleave","mouseover","mouseout","contextmenu","touchstart","touchend","touchcancel"]});function I(e,o,n,a){return Object.keys(n).filter(r=>n[r]!==void 0&&Ve.indexOf(r)!==-1).reduce((r,i)=>(r[i==="sourceLayer"?"source-layer":i]=t.unref(n[i]),r),{type:o,source:n.source||a,id:e})}function N(e,o,n){if(!!n.props)for(let a=0,r=T.length;a<r;a++){const i="on"+T[a].charAt(0).toUpperCase()+T[a].substr(1);n.props[i]&&e.on(T[a],o,n.props[i])}}function He(e,o,n){if(!!n.props)for(let a=0,r=T.length;a<r;a++){const i="on"+T[a].charAt(0).toUpperCase()+T[a].substr(1);n.props[i]&&e.off(T[a],o,n.props[i])}}function P(e,o,n,a,r){function i(){e.value&&(He(o.value,a.layerId,n.vnode),o.value.getLayer(a.layerId)&&o.value.removeLayer(a.layerId))}r.registerUnmountHandler(a.layerId,i),t.onBeforeUnmount(()=>{r.unregisterUnmountHandler(a.layerId),i()})}const me=t.defineComponent({name:"MglBackgroundLayer",mixins:[R],props:{layout:Object,paint:Object},setup(e){const o=t.inject(p);if(!o&&!e.source){t.warn("Background Layer: layer must be used inside source tag or source prop must be set");return}const n=t.inject(f),a=t.inject(g),r=t.inject(y),i=t.inject(b),l=C(r,e.source||o);t.watch([a,l],([u,h])=>{u&&(h||h===void 0)&&n.value.addLayer(I(e.layerId,"background",e,o),e.before||void 0)},{immediate:!0});function d(){a.value&&n.value.removeLayer(e.layerId)}i.registerUnmountHandler(e.layerId,d),t.onBeforeUnmount(()=>{d()})},render(){return t.createCommentVNode("Background Layer")}}),he=t.defineComponent({name:"MglCircleLayer",mixins:[R],props:{layout:Object,paint:Object},setup(e){const o=t.inject(p);if(!o&&!e.source){t.warn("Circle Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(f),r=t.inject(g),i=t.inject(y),l=t.inject(b),d=C(i,e.source||o);t.watch([r,d],([u,h])=>{u&&(h||h===void 0)&&(a.value.addLayer(I(e.layerId,"circle",e,o),e.before||void 0),N(a.value,e.layerId,n.vnode))},{immediate:!0}),P(r,a,n,e,l)},render(){return t.createCommentVNode("Circle Layer")}}),fe=t.defineComponent({name:"MglFillLayer",mixins:[R],props:{layout:Object,paint:Object},setup(e){const o=t.inject(p);if(!o&&!e.source){t.warn("Fill Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(f),r=t.inject(g),i=t.inject(y),l=t.inject(b),d=C(i,e.source||o);t.watch([r,d],([u,h])=>{u&&(h||h===void 0)&&(a.value.addLayer(I(e.layerId,"fill",e,o),e.before||void 0),N(a.value,e.layerId,n.vnode))},{immediate:!0}),P(r,a,n,e,l)},render(){return t.createCommentVNode("Fill Layer")}}),ge=t.defineComponent({name:"MglFillExtrusionLayer",mixins:[R],props:{layout:Object,paint:Object},setup(e){const o=t.inject(p);if(!o&&!e.source){t.warn("Fill Extrude Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(f),r=t.inject(g),i=t.inject(y),l=t.inject(b),d=C(i,e.source||o);t.watch([r,d],([u,h])=>{u&&(h||h===void 0)&&(a.value.addLayer(I(e.layerId,"fill-extrusion",e,o),e.before||void 0),N(a.value,e.layerId,n.vnode))},{immediate:!0}),P(r,a,n,e,l)},render(){return t.createCommentVNode("Fill Extrusion Layer")}}),ye=t.defineComponent({name:"MglHeatmapLayer",mixins:[R],props:{layout:Object,paint:Object},setup(e){const o=t.inject(p);if(!o&&!e.source){t.warn("Heatmap Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(f),r=t.inject(g),i=t.inject(y),l=t.inject(b),d=C(i,e.source||o);t.watch([r,d],([u,h])=>{u&&(h||h===void 0)&&(a.value.addLayer(I(e.layerId,"heatmap",e,o),e.before||void 0),N(a.value,e.layerId,n.vnode))},{immediate:!0}),P(r,a,n,e,l)},render(){return t.createCommentVNode("Heatmap Layer")}}),pe=t.defineComponent({name:"MglHillshadeLayer",mixins:[R],props:{layout:Object,paint:Object},setup(e){const o=t.inject(p);if(!o&&!e.source){t.warn("Hillshade Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(f),r=t.inject(g),i=t.inject(y),l=t.inject(b),d=C(i,e.source||o);t.watch([r,d],([u,h])=>{u&&(h||h===void 0)&&(a.value.addLayer(I(e.layerId,"hillshade",e,o),e.before||void 0),N(a.value,e.layerId,n.vnode))},{immediate:!0}),P(r,a,n,e,l)},render(){return t.createCommentVNode("Hillshade Layer")}}),ve=t.defineComponent({name:"MglLineLayer",mixins:[R],props:{layout:Object,paint:Object},setup(e){const o=t.inject(p);if(!o&&!e.source){t.warn("Line Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(f),r=t.inject(g),i=t.inject(y),l=t.inject(b),d=C(i,e.source||o);t.watch([r,d],([u,h])=>{u&&(h||h===void 0)&&(a.value.addLayer(I(e.layerId,"line",e,o),e.before||void 0),N(a.value,e.layerId,n.vnode))},{immediate:!0}),P(r,a,n,e,l)},render(){return t.createCommentVNode("Line Layer")}}),be=t.defineComponent({name:"MglRasterLayer",mixins:[R],props:{layout:Object,paint:Object},setup(e){const o=t.inject(p);if(!o&&!e.source){t.warn("Raster Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(f),r=t.inject(g),i=t.inject(y),l=t.inject(b),d=C(i,e.source||o);t.watch([r,d],([u,h])=>{u&&(h||h===void 0)&&(a.value.addLayer(I(e.layerId,"raster",e,o),e.before||void 0),N(a.value,e.layerId,n.vnode))},{immediate:!0}),P(r,a,n,e,l)},render(){return t.createCommentVNode("Raster Layer")}}),Se=t.defineComponent({name:"MglSymbolLayer",mixins:[R],props:{layout:Object,paint:Object},setup(e){const o=t.inject(p);if(!o&&!e.source){t.warn("Symbol Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(f),r=t.inject(g),i=t.inject(y),l=t.inject(b),d=C(i,e.source||o);t.watch([r,d],([u,h])=>{u&&(h||h===void 0)&&(a.value.addLayer(I(e.layerId,"symbol",e,o),e.before||void 0),N(a.value,e.layerId,n.vnode))},{immediate:!0}),P(r,a,n,e,l)},render(){return t.createCommentVNode("Symbol Layer")}}),Fe=Object.freeze(Object.defineProperty({__proto__:null,MglMap:D,MglAttributionControl:Y,MglCustomControl:K,MglFullscreenControl:J,MglFrameRateControl:X,MglGeolocationControl:Q,MglNavigationControl:ee,MglScaleControl:oe,MglStyleSwitchControl:ne,MglButton:Z,MglMarker:ae,MglCanvasSource:re,MglGeoJsonSource:ie,MglImageSource:se,MglRasterSource:le,MglRasterDemSource:ue,MglVectorSource:ce,MglVideoSource:de,MglBackgroundLayer:me,MglCircleLayer:he,MglFillLayer:fe,MglFillExtrusionLayer:ge,MglHeatmapLayer:ye,MglHillshadeLayer:pe,MglLineLayer:ve,MglRasterLayer:be,MglSymbolLayer:Se},Symbol.toStringTag,{value:"Module"})),$=function(o){Object.entries(Fe).forEach(([n,a])=>{o.component(n,a)})},Ue=Object.freeze(Object.defineProperty({__proto__:null,default:$,useMap:Oe,MglDefaults:m,usePositionWatcher:x,Position:L,MglMap:D,MglAttributionControl:Y,MglCustomControl:K,MglFullscreenControl:J,MglFrameRateControl:X,MglGeolocationControl:Q,MglNavigationControl:ee,MglScaleControl:oe,MglStyleSwitchControl:ne,MglButton:Z,MglMarker:ae,MglCanvasSource:re,MglGeoJsonSource:ie,MglImageSource:se,MglRasterSource:le,MglRasterDemSource:ue,MglVectorSource:ce,MglVideoSource:de,MglBackgroundLayer:me,MglCircleLayer:he,MglFillLayer:fe,MglFillExtrusionLayer:ge,MglHeatmapLayer:ye,MglHillshadeLayer:pe,MglLineLayer:ve,MglRasterLayer:be,MglSymbolLayer:Se,mapSymbol:f,isLoadedSymbol:g,componentIdSymbol:y,sourceIdSymbol:p,sourceLayerRegistry:b,emitterSymbol:M},Symbol.toStringTag,{value:"Module"}));Object.entries(Ue).forEach(([e,o])=>{if(e!=="default"){const n=e,a=o;$[n]=a}});module.exports=$;
//# sourceMappingURL=vue-maplibre-gl.ssr.js.map
