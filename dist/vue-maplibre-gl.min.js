var VueMaplibreGl=function(u,t,L){"use strict";var Fe=Object.defineProperty;var Ue=(u,t,L)=>t in u?Fe(u,t,{enumerable:!0,configurable:!0,writable:!0,value:L}):u[t]=L;var C=(u,t,L)=>(Ue(u,typeof t!="symbol"?t+"":t,L),L);const g=Symbol("map"),y=Symbol("isLoaded"),p=Symbol("componentId"),b=Symbol("sourceId"),S=Symbol("sourceLayerRegistry"),j=Symbol("emitter"),m=t.reactive({style:"https://demotiles.maplibre.org/style.json",center:Object.freeze([0,0]),zoom:1,trackResize:!1});class O{static createEventHandler(o,n,a,i){return(r={})=>a.emit(i,{type:r.type,map:n,component:o,event:r})}}C(O,"MAP_OPTION_KEYS",["antialias","attributionControl","bearing","bearingSnap","bounds","boxZoom","center","clickTolerance","collectResourceTiming","crossSourceCollisions","container","customAttribution","dragPan","dragRotate","doubleClickZoom","hash","fadeDuration","failIfMajorPerformanceCaveat","fitBoundsOptions","interactive","keyboard","locale","localIdeographFontFamily","logoPosition","maxBounds","maxPitch","maxZoom","minPitch","minZoom","preserveDrawingBuffer","pitch","pitchWithRotate","refreshExpiredTiles","renderWorldCopies","scrollZoom","mapStyle","trackResize","transformRequest","touchZoomRotate","touchPitch","zoom","maxTileCacheSize","accessToken"]),C(O,"MARKER_OPTION_KEYS",["element","offset","anchor","color","draggable","clickTolerance","rotation","rotationAlignment","pitchAlignment","scale"]),C(O,"MAP_EVENT_TYPES",["error","load","idle","remove","render","resize","webglcontextlost","webglcontextrestored","dataloading","data","tiledataloading","sourcedataloading","styledataloading","sourcedata","styledata","boxzoomcancel","boxzoomstart","boxzoomend","touchcancel","touchmove","touchend","touchstart","click","contextmenu","dblclick","mousemove","mouseup","mousedown","mouseout","mouseover","movestart","move","moveend","zoomstart","zoom","zoomend","rotatestart","rotate","rotateend","dragstart","drag","dragend","pitchstart","pitch","pitchend","wheel"]);var R=(e=>(e.TOP_LEFT="top-left",e.TOP_RIGHT="top-right",e.BOTTOM_LEFT="bottom-left",e.BOTTOM_RIGHT="bottom-right",e))(R||{});const I=Object.values(R);function x(e,o,n){t.watch(e,a=>{a&&I.indexOf(a)===-1||(o.value.hasControl(n)&&o.value.removeControl(n),o.value.addControl(n,a))},{immediate:!0})}function Me(e){return{all:e=e||new Map,on:function(o,n){var a=e.get(o);a?a.push(n):e.set(o,[n])},off:function(o,n){var a=e.get(o);a&&(n?a.splice(a.indexOf(n)>>>0,1):e.set(o,[]))},emit:function(o,n){var a=e.get(o);a&&a.slice().map(function(i){i(n)}),(a=e.get("*"))&&a.slice().map(function(i){i(o,n)})}}}const H=new Map,W=Symbol("default");function Le(e=W){let o=H.get(e);return o||(o=t.reactive({isLoaded:!1,isMounted:!1}),H.set(e,o)),o}function Oe(e,o=W){var a;let n=H.get(o);return n||(n=t.reactive({isLoaded:!1,isMounted:!1}),H.set(o,n)),n.isLoaded=!1,n.isMounted=!1,n.component=e,n.map=e.map,n.isLoaded=((a=e.map)==null?void 0:a.loaded())||!1,n}function je(e,o=250,n=!1){let a;function i(){const r=arguments,s=()=>{a=void 0,n!==!0&&e.apply(this,r)};clearTimeout(a),n===!0&&a===void 0&&e.apply(this,r),a=window.setTimeout(s,o)}return i.cancel=()=>{clearTimeout(a)},i}const Ze="",q=t.defineComponent({name:"MglMap",props:{width:{type:[Number,String],default:"100%"},height:{type:[Number,String],default:"100%"},antialias:{type:Boolean,default:()=>m.antialias},attributionControl:{type:Boolean,default:()=>m.attributionControl},bearing:{type:Number,default:()=>m.bearing},bearingSnap:{type:Number,default:()=>m.bearingSnap},bounds:{type:[Array,Object],default:()=>m.bounds},boxZoom:{type:Boolean,default:()=>m.boxZoom},center:{type:[Array,Object],default:()=>m.center},clickTolerance:{type:Number,default:()=>m.clickTolerance},collectResourceTiming:{type:Boolean,default:()=>m.collectResourceTiming},crossSourceCollisions:{type:Boolean,default:()=>m.crossSourceCollisions},customAttribution:{type:[String,Array],default:()=>m.customAttribution},dragPan:{type:Boolean,default:()=>m.dragPan},dragRotate:{type:Boolean,default:()=>m.dragRotate},doubleClickZoom:{type:Boolean,default:()=>m.doubleClickZoom},hash:{type:[Boolean,String],default:()=>m.hash},fadeDuration:{type:Number,default:()=>m.fadeDuration},failIfMajorPerformanceCaveat:{type:Boolean,default:()=>m.failIfMajorPerformanceCaveat},fitBoundsOptions:{type:Object,default:()=>m.fitBoundsOptions},interactive:{type:Boolean,default:()=>m.interactive},keyboard:{type:Boolean,default:()=>m.keyboard},locale:{type:Object,default:()=>m.locale},localIdeographFontFamily:{type:String,default:()=>m.localIdeographFontFamily},logoPosition:{type:[String],validate:e=>e in R,default:()=>m.logoPosition},maxBounds:{type:[Array,Object],default:()=>m.maxBounds},maxPitch:{type:Number,default:()=>m.maxPitch},maxZoom:{type:Number,default:()=>m.maxZoom},minPitch:{type:Number,default:()=>m.minPitch},minZoom:{type:Number,default:()=>m.minZoom},preserveDrawingBuffer:{type:Boolean,default:()=>m.preserveDrawingBuffer},pitch:{type:Number,default:()=>m.pitch},pitchWithRotate:{type:Boolean,default:()=>m.pitchWithRotate},refreshExpiredTiles:{type:Boolean,default:()=>m.refreshExpiredTiles},renderWorldCopies:{type:Boolean,default:()=>m.renderWorldCopies},scrollZoom:{type:Boolean,default:()=>m.scrollZoom},mapStyle:{type:[String,Object],default:()=>m.style},trackResize:{type:Boolean,default:()=>m.trackResize},transformRequest:{type:Function,default:m.transformRequest},touchZoomRotate:{type:Boolean,default:()=>m.touchZoomRotate},touchPitch:{type:Boolean,default:()=>m.touchPitch},zoom:{type:Number,default:()=>m.zoom},maxTileCacheSize:{type:Number,default:()=>m.maxTileCacheSize},accessToken:{type:String,default:()=>m.accessToken},mapKey:{type:[String,Symbol]}},emits:["map:error","map:load","map:idle","map:remove","map:render","map:resize","map:webglcontextlost","map:webglcontextrestored","map:dataloading","map:data","map:tiledataloading","map:sourcedataloading","map:styledataloading","map:sourcedata","map:styledata","map:boxzoomcancel","map:boxzoomstart","map:boxzoomend","map:touchcancel","map:touchmove","map:touchend","map:touchstart","map:click","map:contextmenu","map:dblclick","map:mousemove","map:mouseup","map:mousedown","map:mouseout","map:mouseover","map:movestart","map:move","map:moveend","map:zoomstart","map:zoom","map:zoomend","map:rotatestart","map:rotate","map:rotateend","map:dragstart","map:drag","map:dragend","map:pitchstart","map:pitch","map:pitchend","map:wheel"],setup(e,o){const n=t.markRaw(t.getCurrentInstance()),a=t.shallowRef(null),i=t.shallowRef(null),r=t.shallowRef(null),s=t.ref(!1),h=t.ref(!1),c=new Map,f=Me(),N=Oe(n,e.mapKey);let k;return t.provide(g,r),t.provide(y,h),t.provide(p,n.uid),t.provide(b,""),t.provide(j,f),t.watch(()=>e.bearing,d=>{var l;d&&((l=r.value)==null||l.setBearing(d))}),t.watch(()=>e.bounds,d=>{var l;d&&((l=r.value)==null||l.fitBounds(d,e.fitBoundsOptions))}),t.watch(()=>e.center,d=>{var l;d&&((l=r.value)==null||l.setCenter(d))}),t.watch(()=>e.maxBounds,d=>{var l;d&&((l=r.value)==null||l.setMaxBounds(d))}),t.watch(()=>e.maxPitch,d=>{var l;d&&((l=r.value)==null||l.setMaxPitch(d))}),t.watch(()=>e.maxZoom,d=>{var l;d&&((l=r.value)==null||l.setMaxZoom(d))}),t.watch(()=>e.minPitch,d=>{var l;d&&((l=r.value)==null||l.setMinPitch(d))}),t.watch(()=>e.minZoom,d=>{var l;d&&((l=r.value)==null||l.setMinZoom(d))}),t.watch(()=>e.pitch,d=>{var l;d&&((l=r.value)==null||l.setPitch(d))}),t.watch(()=>e.renderWorldCopies,d=>{var l;d&&((l=r.value)==null||l.setRenderWorldCopies(d))}),t.watch(()=>e.mapStyle,d=>{var l;d&&((l=r.value)==null||l.setStyle(d))}),t.watch(()=>e.transformRequest,d=>{var l;d&&((l=r.value)==null||l.setTransformRequest(d))}),t.watch(()=>e.zoom,d=>{var l;d&&((l=r.value)==null||l.setZoom(d))}),t.watch(()=>e.zoom,d=>{var l;d&&((l=r.value)==null||l.setZoom(d))}),t.onMounted(()=>{N.isMounted=!0;const d=Object.keys(e).filter(l=>e[l]!==void 0&&O.MAP_OPTION_KEYS.indexOf(l)!==-1).reduce((l,M)=>(l[M==="mapStyle"?"style":M]=t.unref(e[M]),l),{container:i.value});if(r.value=t.markRaw(new L.Map(d)),N.map=r.value,s.value=!0,c.set("__load",()=>(h.value=!0,N.isLoaded=!0)),r.value.on("load",c.get("__load")),n.vnode.props){for(let l=0,M=O.MAP_EVENT_TYPES.length;l<M;l++)if(n.vnode.props["onMap:"+O.MAP_EVENT_TYPES[l]]){const $=O.createEventHandler(n,r.value,o,"map:"+O.MAP_EVENT_TYPES[l]);c.set(O.MAP_EVENT_TYPES[l],$),r.value.on(O.MAP_EVENT_TYPES[l],$)}}k=new ResizeObserver(je(r.value.resize.bind(r.value),100)),k.observe(i.value)}),t.onBeforeUnmount(()=>{N.isMounted=!1,N.isLoaded=!1,k&&k.disconnect(),r.value&&c.forEach((d,l)=>{r.value.off(l.startsWith("__")?l.substr(2):l,d)})}),{map:r,componentContainer:a,container:i,isLoaded:h,isInitialized:s}},render(){return t.h("div",{ref:"componentContainer",class:"mgl-container",style:{height:this.$props.height,width:this.$props.width}},[t.h("div",{ref:"container",class:"mgl-wrapper"}),this.isInitialized&&this.$slots.default?this.$slots.default():void 0])}}),D=t.defineComponent({name:"MglAttributionControl",props:{position:{type:String,validator:e=>I.indexOf(e)!==-1},compact:Boolean,customAttribution:[String,Array]},setup(e){const o=t.inject(g),n=new L.AttributionControl({compact:e.compact,customAttribution:e.customAttribution});x(()=>e.position,o,n),t.onBeforeUnmount(()=>o.value.removeControl(n))},render(){}}),V=class{constructor(o,n){C(this,"container");this.isAdded=o,this.container=document.createElement("div"),this.setClasses(n)}getDefaultPosition(){return R.TOP_LEFT}onAdd(){return t.nextTick(()=>this.isAdded.value=!0),this.container}onRemove(){this.isAdded.value=!1,this.container.remove()}setClasses(o){o?(this.container.classList.remove(V.CONTROL_CLASS),this.container.classList.remove(V.CONTROL_GROUP_CLASS)):(this.container.classList.add(V.CONTROL_CLASS),this.container.classList.add(V.CONTROL_GROUP_CLASS))}};let E=V;C(E,"CONTROL_CLASS","maplibregl-ctrl"),C(E,"CONTROL_GROUP_CLASS","maplibregl-ctrl-group");const G=t.defineComponent({name:"MglCustomControl",props:{position:{type:String,validator:e=>I.indexOf(e)!==-1},noClasses:{type:Boolean,default:!1}},setup(e){const o=t.inject(g),n=t.ref(!1),a=new E(n,e.noClasses);return x(()=>e.position,o,a),t.watch(()=>e.noClasses,i=>a.setClasses(i)),t.onBeforeUnmount(()=>{o.value.removeControl(a)}),{isAdded:n,container:a.container}},render(){return this.isAdded?t.h(t.Teleport,{to:this.container},this.$slots.default?this.$slots.default():void 0):t.createCommentVNode("custom-component")}}),Y=t.defineComponent({name:"MglFullscreenControl",props:{position:{type:String,default:R.TOP_RIGHT,validator:e=>I.indexOf(e)!==-1},container:{type:HTMLElement,default:null}},setup(e){const o=t.inject(g),n=new L.FullscreenControl(e.container?{container:e.container}:void 0);x(()=>e.position,o,n),t.onBeforeUnmount(()=>o.value.removeControl(n))},render(){}});class Re{constructor(o="rgba(0,0,0,0.9)",n=4*window.devicePixelRatio,a="#7cf859",i="Monaco, Consolas, Courier, monospace",r=60*window.devicePixelRatio,s=90*window.devicePixelRatio,h=0,c=5*window.devicePixelRatio,f=100*window.devicePixelRatio){C(this,"frames",0);C(this,"totalTime",0);C(this,"totalFrames",0);C(this,"time",null);C(this,"map");C(this,"container");C(this,"readOutput");C(this,"canvas");C(this,"eventHandlers",new Map);this.background=o,this.barWidth=n,this.color=a,this.font=i,this.graphHeight=r,this.graphWidth=s,this.graphTop=h,this.graphRight=c,this.width=f}getDefaultPosition(){return R.TOP_RIGHT}onAdd(o){this.map=o;const n=this.container=document.createElement("div");return n.className="mapboxgl-ctrl mapboxgl-ctrl-fps",n.style.backgroundColor=this.background,n.style.borderRadius="6px",this.readOutput=document.createElement("div"),this.readOutput.style.color=this.color,this.readOutput.style.fontFamily=this.font,this.readOutput.style.padding="0 5px 5px",this.readOutput.style.fontSize="9px",this.readOutput.style.fontWeight="bold",this.readOutput.textContent="Waiting\u2026",this.canvas=document.createElement("canvas"),this.canvas.className="mapboxgl-ctrl-canvas",this.canvas.width=this.width,this.canvas.height=this.graphHeight,this.canvas.style.cssText=`width: ${this.width/window.devicePixelRatio}px; height: ${this.graphHeight/window.devicePixelRatio}px;`,n.appendChild(this.readOutput),n.appendChild(this.canvas),this.eventHandlers.set("movestart",this.onMoveStart.bind(this)),this.eventHandlers.set("moveend",this.onMoveEnd.bind(this)),this.map.on("movestart",this.eventHandlers.get("movestart")),this.map.on("moveend",this.eventHandlers.get("moveend")),this.container}onRemove(){this.map.off("movestart",this.eventHandlers.get("movestart")),this.map.off("moveend",this.eventHandlers.get("moveend")),this.eventHandlers.clear(),this.container.parentNode.removeChild(this.container),this.map=void 0}onMoveStart(){this.frames=0,this.time=performance.now(),this.eventHandlers.set("render",this.onRender.bind(this)),this.map.on("render",this.eventHandlers.get("render"))}onMoveEnd(){const o=performance.now();this.updateGraph(this.getFPS(o)),this.frames=0,this.time=null,this.map.off("render",this.eventHandlers.get("render"))}onRender(){if(this.time){this.frames++;const o=performance.now();o>=this.time+1e3&&(this.updateGraph(this.getFPS(o)),this.frames=0,this.time=performance.now())}}getFPS(o){return this.totalTime+=o-this.time,this.totalFrames+=this.frames,Math.round(1e3*this.frames/(o-this.time))||0}updateGraph(o){const n=this.canvas.getContext("2d"),a=Math.round(1e3*this.totalFrames/this.totalTime)||0,i=(this.graphHeight,this.barWidth);n.fillStyle=this.background,n.globalAlpha=1,n.fillRect(0,0,this.graphWidth,this.graphTop),n.fillStyle=this.color,this.readOutput.textContent=`${o} FPS (${a} Avg)`,n.drawImage(this.canvas,this.graphRight+i,this.graphTop,this.graphWidth-i,this.graphHeight,this.graphRight,this.graphTop,this.graphWidth-i,this.graphHeight),n.fillRect(this.graphRight+this.graphWidth-i,this.graphTop,i,this.graphHeight),n.fillStyle=this.background,n.globalAlpha=.75,n.fillRect(this.graphRight+this.graphWidth-i,this.graphTop,i,(1-o/100)*this.graphHeight)}}const K=t.defineComponent({name:"MglFrameRateControl",props:{position:{type:String,validator:e=>I.indexOf(e)!==-1},background:{type:String,default:"rgba(0,0,0,0.9)"},barWidth:{type:Number,default:4*window.devicePixelRatio},color:{type:String,default:"#7cf859"},font:{type:String,default:"Monaco, Consolas, Courier, monospace"},graphHeight:{type:Number,default:60*window.devicePixelRatio},graphWidth:{type:Number,default:90*window.devicePixelRatio},graphTop:{type:Number,default:0},graphRight:{type:Number,default:5*window.devicePixelRatio},width:{type:Number,default:100*window.devicePixelRatio}},setup(e){const o=t.inject(g),n=new Re(e.background,e.barWidth,e.color,e.font,e.graphHeight,e.graphWidth,e.graphTop,e.graphRight,e.width);x(()=>e.position,o,n),t.onBeforeUnmount(()=>o.value.removeControl(n))},render(){}}),J=t.defineComponent({name:"MglGeolocationControl",props:{position:{type:String,default:R.TOP_RIGHT,validator:e=>I.indexOf(e)!==-1},positionOptions:{type:Object,default:{enableHighAccuracy:!1,timeout:6e3}},fitBoundsOptions:{type:Object,default:{maxZoom:15}},trackUserLocation:{type:Boolean,default:!1},showAccuracyCircle:{type:Boolean,default:!0},showUserLocation:{type:Boolean,default:!0}},setup(e){const o=t.inject(g),n=new L.GeolocateControl({positionOptions:e.positionOptions,fitBoundsOptions:e.fitBoundsOptions,trackUserLocation:e.trackUserLocation,showAccuracyCircle:e.showAccuracyCircle,showUserLocation:e.showUserLocation});x(()=>e.position,o,n),t.onBeforeUnmount(()=>o.value.removeControl(n))},render(){}}),X=t.defineComponent({name:"MglNavigationControl",props:{position:{type:String,default:R.TOP_RIGHT,validator:e=>I.indexOf(e)!==-1},showCompass:{type:Boolean,default:!0},showZoom:{type:Boolean,default:!0},visualizePitch:Boolean},setup(e){const o=t.inject(g),n=new L.NavigationControl({showCompass:e.showCompass,showZoom:e.showZoom,visualizePitch:e.visualizePitch});x(()=>e.position,o,n),t.onBeforeUnmount(()=>o.value.removeControl(n))},render(){}});var Q=(e=>(e.IMPERIAL="imperial",e.METRIC="metric",e.NAUTICAL="nautical",e))(Q||{});const Ie=Object.values(Q),ee=t.defineComponent({name:"MglScaleControl",props:{position:{type:String,validator:e=>I.indexOf(e)!==-1},maxWidth:{type:Number,default:100},unit:{type:String,default:"metric",validator:e=>Ie.indexOf(e)!==-1}},setup(e){const o=t.inject(g),n=new L.ScaleControl({maxWidth:e.maxWidth,unit:e.unit});x(()=>e.position,o,n),t.onBeforeUnmount(()=>o.value.removeControl(n))},render(){}});var F=(e=>(e.DEFAULT="default",e.TEXT="text",e.MDI="mdi",e.SIMPLE_ICON="simple-icons",e))(F||{});const xe=Object.values(F),U={text:void 0,mdi:{size:21,viewbox:"0 0 24 24"},["simple-icons"]:{size:21,viewbox:"0 0 24 24"},default:{size:0,viewbox:"0 0 0 0"}},Z=t.defineComponent({name:"MglButton",props:{type:{type:String,default:"default",validator:e=>xe.indexOf(e)!==-1},path:{type:String},size:Number,viewbox:String},setup(e){!e.path&&e.type!=="text"&&t.warn("property `path` must be set on MaplibreButton");const o=t.ref(U[e.type]||U.default);return t.watch(()=>e.type,n=>o.value=U[n]||U.default),{defaults:o}},render(){return this.type==="text"?t.h("button",{type:"button"},this.$slots.default?this.$slots.default():void 0):t.h("button",{type:"button",class:"maplibregl-ctrl-icon"},[t.h("svg",{width:this.size||this.defaults.size,height:this.size||this.defaults.size,viewBox:this.viewbox||this.defaults.viewbox},t.h("path",{fill:"currentColor",d:this.path})),this.$slots.default?this.$slots.default():void 0])}});var Te="M12,18.54L19.37,12.8L21,14.07L12,21.07L3,14.07L4.62,12.81L12,18.54M12,16L3,9L12,2L21,9L12,16M12,4.53L6.26,9L12,13.47L17.74,9L12,4.53Z";function te(e){return e&&!!e.stopPropagation}const oe=t.defineComponent({name:"MglStyleSwitchControl",props:{position:{type:String,validator:e=>I.indexOf(e)!==-1},mapStyles:{type:Array,required:!0,default:[]},modelValue:{type:Object},isOpen:{type:Boolean,default:void 0}},emits:["update:modelValue","update:isOpen"],setup(e,o){const n=t.inject(g),a=t.inject(y),i=t.inject(j),r=t.ref(!1),s=t.ref(e.isOpen===void 0?!1:e.isOpen),h=t.ref(e.modelValue===void 0?e.mapStyles.length?e.mapStyles[0]:null:e.modelValue),c=new E(r,!1),f=d.bind(null,!1);function N(){const l=n.value.getStyle().name;for(let M=0,$=e.mapStyles.length;M<$;M++)if(e.mapStyles[M].name===l){k(e.mapStyles[M]);break}}t.watch(a,l=>{l&&N()},{immediate:!0}),n.value.on("style.load",N),document.addEventListener("click",f),x(()=>e.position,n,c),e.modelValue!==void 0&&t.watch(()=>e.modelValue,l=>{l!==void 0&&(h.value=l)}),e.isOpen!==void 0&&t.watch(()=>e.isOpen,l=>{l!==void 0&&(s.value=l)}),t.onBeforeUnmount(()=>{n.value.removeControl(c),n.value.off("style.load",N),document.removeEventListener("click",f)});function k(l){var M;((M=h.value)==null?void 0:M.name)!==l.name&&(i.emit("styleSwitched",l),n.value.setStyle(l.style),e.modelValue===void 0&&(h.value=l),o.emit("update:modelValue",l),d(!1))}function d(l,M){te(M)?M.stopPropagation():te(l)&&l.stopPropagation(),!(e.isOpen!==void 0&&e.isOpen===l||s.value===l)&&(e.isOpen===void 0?(s.value=typeof l=="boolean"?l:!s.value,o.emit("update:isOpen",s.value)):o.emit("update:isOpen",typeof l=="boolean"?l:!e.isOpen))}return{isAdded:r,container:c.container,setStyle:k,toggleOpen:d,intIsOpen:s,intModelValue:h}},template:`
		<div class="maplibregl-ctrl maplibregl-ctrl-group">
		<slot>
			<slot name="button">
				<button type="button" class="maplibregl-ctrl-icon maplibregl-style-switch"></button>
			</slot>
			<slot name="styleList">
				<div class="maplibregl-style-list" style="display: none;">
					<button type="button" class="Dark" data-uri="&quot;mapbox://styles/mapbox/dark-v10&quot;">Dark</button>
					<button type="button" class="Light" data-uri="&quot;mapbox://styles/mapbox/light-v10&quot;">Light</button>
					<button type="button" class="Outdoors" data-uri="&quot;mapbox://styles/mapbox/outdoors-v11&quot;">Outdoors</button>
					<button type="button" class="Satellite" data-uri="&quot;mapbox://styles/mapbox/satellite-streets-v11&quot;">Satellite</button>
					<button type="button" class="Streets active" data-uri="&quot;mapbox://styles/mapbox/streets-v11&quot;">Streets</button>
				</div>
			</slot>
		</slot>
		</div>
	`,render(){if(!this.isAdded)return t.createCommentVNode("style-switch-control");const e={isOpen:this.intIsOpen,currentStyle:this.intModelValue,mapStyles:this.mapStyles,toggleOpen:this.toggleOpen,setStyle:this.setStyle};return t.h(t.Teleport,{to:this.container},t.renderSlot(this.$slots,"default",e,()=>[t.renderSlot(this.$slots,"button",e,()=>[t.h(Z,{type:F.MDI,path:Te,class:["maplibregl-ctrl-icon maplibregl-style-switch",this.intIsOpen?"is-open":""],onClick:this.toggleOpen.bind(null,!0)})]),t.renderSlot(this.$slots,"styleList",e,()=>[t.h("div",{class:["maplibregl-style-list",this.intIsOpen?"is-open":""]},this.mapStyles.map(o=>{var n,a;return o.icon?t.h(Z,{type:F.MDI,path:o.icon.path,class:((n=this.intModelValue)==null?void 0:n.name)===o.name?"is-active":"",onClick:()=>this.setStyle(o)},t.createTextVNode(o.label)):t.h("button",{type:"button",class:((a=this.intModelValue)==null?void 0:a.name)===o.name?"is-active":"",onClick:()=>this.setStyle(o)},t.createTextVNode(o.label))}))])]))}}),ne=t.defineComponent({name:"MglMarker",props:{coordinates:{type:[Object,Array],required:!0},offset:[Object,Array],anchor:String,color:String,clickTolerance:Number,rotation:Number,rotationAlignment:String,pitchAlignment:String,scale:Number},setup(e){const o=t.inject(g),n=Object.keys(e).filter(i=>e[i]!==void 0&&O.MARKER_OPTION_KEYS.indexOf(i)!==-1).reduce((i,r)=>(i[r]=t.unref(e[r]),i),{}),a=new L.Marker(n);return a.setLngLat(e.coordinates).addTo(o.value),t.watch(()=>e.coordinates,i=>a.setLngLat(i)),t.watch(()=>e.offset,i=>a.setOffset(i||[0,0])),t.watch(()=>e.pitchAlignment,i=>a.setPitchAlignment(i||"auto")),t.watch(()=>e.rotationAlignment,i=>a.setRotationAlignment(i||"auto")),t.onBeforeUnmount(a.remove.bind(a)),{marker:a}},render(){}});function Pe(e,o,n){return Object.keys(o).filter(a=>o[a]!==void 0&&n.indexOf(a)!==-1).reduce((a,i)=>(a[i]=t.unref(o[i]),a),{type:e})}const ae=new Map;function w(e,o){const n=typeof o=="string",a=String(e)+(n?o:"");let i=ae.get(a);return i||(i=t.ref(n?null:void 0),ae.set(a,i)),i}function _(e,o,n,a,i,r,s,h){function c(){n.value&&(e.value.addSource(i.sourceId,Pe(r,i,s)),o.value=e.value.getSource(i.sourceId))}function f(){o.value=null}return t.watch(n,c,{immediate:!0}),e.value.on("style.load",c),a.on("styleSwitched",f),t.onBeforeUnmount(()=>{n.value&&(h.unmount(),e.value.removeSource(i.sourceId)),e.value.off("style.load",c),a.off("styleSwitched",f)})}class z{constructor(){C(this,"unmountHandlers",new Map)}registerUnmountHandler(o,n){this.unmountHandlers.set(o,n)}unregisterUnmountHandler(o){this.unmountHandlers.delete(o)}unmount(){this.unmountHandlers.forEach(o=>o())}}const Ne=["animate","coordinates","canvas"],ie=t.defineComponent({name:"MglCanvasSource",props:{sourceId:{type:String,required:!0},coordinates:Array,animate:Boolean,canvas:[HTMLCanvasElement,String]},setup(e){const o=t.inject(g),n=t.inject(y),a=t.inject(j),i=t.inject(p),r=w(i,e.sourceId),s=new z;return t.provide(b,e.sourceId),t.provide(S,s),_(o,r,n,a,e,"canvas",Ne,s),t.watch(()=>e.coordinates,h=>{var c;return(c=r.value)==null?void 0:c.setCoordinates(h||[])}),{source:r}},render(){return[t.createCommentVNode("Canvas Source"),this.source&&this.$slots.default?this.$slots.default():void 0]}}),Ae=["data","maxzoom","attribution","buffer","tolerance","cluster","clusterRadius","clusterMaxZoom","clusterMinPoints","clusterProperties","lineMetrics","generateId","promoteId","filter"],re=t.defineComponent({name:"MglGeoJsonSource",props:{sourceId:{type:String,required:!0},data:[Object,String],maxzoom:Number,attribution:String,buffer:Number,tolerance:Number,cluster:[Number,Boolean],clusterRadius:Number,clusterMaxZoom:Number,clusterMinPoints:Number,clusterProperties:Object,lineMetrics:Boolean,generateId:Boolean,promoteId:Object,filter:[Array,String,Object]},setup(e){const o=t.inject(g),n=t.inject(y),a=t.inject(j),i=t.inject(p),r=w(i,e.sourceId),s=new z;return t.provide(b,e.sourceId),t.provide(S,s),_(o,r,n,a,e,"geojson",Ae,s),t.watch(t.isRef(e.data)?e.data:()=>e.data,h=>{var c;return(c=r.value)==null?void 0:c.setData(h||{type:"FeatureCollection",features:[]})}),{source:r}},render(){return[t.createCommentVNode("GeoJSON Source"),this.source&&this.$slots.default?this.$slots.default():void 0]}}),ve=["url","coordinates"],le=t.defineComponent({name:"MglImageSource",props:{sourceId:{type:String,required:!0},url:String,coordinates:Array},setup(e){const o=t.inject(g),n=t.inject(y),a=t.inject(j),i=t.inject(p),r=w(i,e.sourceId),s=new z;return t.provide(b,e.sourceId),t.provide(S,s),_(o,r,n,a,e,"image",ve,s),t.watch(()=>e.coordinates,h=>{var c;return(c=r.value)==null?void 0:c.setCoordinates(h||[])}),{source:r}},render(){return[t.createCommentVNode("Image Source"),this.source&&this.$slots.default?this.$slots.default():void 0]}}),Be=["url","tiles","bounds","minzoom","maxzoom","tileSize","scheme","attribution"],se=t.defineComponent({name:"MglRasterSource",props:{sourceId:{type:String,required:!0},url:String,tiles:Array,bounds:Array,minzoom:Number,maxzoom:Number,tileSize:Number,scheme:String,attribution:String},setup(e){const o=t.inject(g),n=t.inject(y),a=t.inject(j),i=t.inject(p),r=w(i,e.sourceId),s=new z;return t.provide(b,e.sourceId),t.provide(S,s),_(o,r,n,a,e,"raster",Be,s),{source:r}},render(){return t.createCommentVNode("Video Source")}}),_e=["url","tiles","bounds","minzoom","maxzoom","tileSize","attribution","encoding"],ce=t.defineComponent({name:"MglRasterDemSource",props:{sourceId:{type:String,required:!0},url:String,tiles:Array,bounds:Array,minzoom:Number,maxzoom:Number,tileSize:Number,attribution:String,encoding:String},setup(e){const o=t.inject(g),n=t.inject(y),a=t.inject(j),i=t.inject(p),r=w(i,e.sourceId),s=new z;return t.provide(b,e.sourceId),t.provide(S,s),_(o,r,n,a,e,"raster-dem",_e,s),{source:r}},render(){return t.createCommentVNode("Video Source")}}),ze=["url","tiles","bounds","scheme","minzoom","maxzoom","attribution","promoteId"],de=t.defineComponent({name:"MglVectorSource",props:{sourceId:{type:String,required:!0},url:String,tiles:Array,bounds:Array,scheme:String,minzoom:Number,maxzoom:Number,attribution:String,promoteId:Object},setup(e){const o=t.inject(g),n=t.inject(y),a=t.inject(j),i=t.inject(p),r=w(i,e.sourceId),s=new z;return t.provide(b,e.sourceId),t.provide(S,s),_(o,r,n,a,e,"vector",ze,s),t.watch(()=>e.tiles,h=>{var c;return(c=r.value)==null?void 0:c.setTiles(h||[])}),t.watch(()=>e.url,h=>{var c;return(c=r.value)==null?void 0:c.setUrl(h||"")}),{source:r}},render(){return t.createCommentVNode("Vector Source")}}),ke=["urls","coordinates"],ue=t.defineComponent({name:"MglVideoSource",props:{sourceId:{type:String,required:!0},urls:Array,coordinates:Array},setup(e){const o=t.inject(g),n=t.inject(y),a=t.inject(j),i=t.inject(p),r=w(i,e.sourceId),s=new z;return t.provide(b,e.sourceId),t.provide(S,s),_(o,r,n,a,e,"video",ke,s),t.watch(()=>e.coordinates,h=>{var c;return(c=r.value)==null?void 0:c.setCoordinates(h||[])}),{source:r}},render(){return t.createCommentVNode("Video Source")}}),Ee=["metadata","ref","source","sourceLayer","minzoom","maxzoom","interactive","filter","layout","paint"],A=["click","dblclick","mousedown","mouseup","mousemove","mouseenter","mouseleave","mouseover","mouseout","contextmenu","touchstart","touchend","touchcancel"],T=t.defineComponent({props:{layerId:{type:String,required:!0},source:[String,Object],metadata:[Object,Array,String,Number],ref:String,sourceLayer:String,minzoom:Number,maxzoom:Number,interactive:Boolean,filter:Array,before:String},emit:["click","dblclick","mousedown","mouseup","mousemove","mouseenter","mouseleave","mouseover","mouseout","contextmenu","touchstart","touchend","touchcancel"]});function P(e,o,n,a){return Object.keys(n).filter(i=>n[i]!==void 0&&Ee.indexOf(i)!==-1).reduce((i,r)=>(i[r==="sourceLayer"?"source-layer":r]=t.unref(n[r]),i),{type:o,source:n.source||a,id:e})}function v(e,o,n){if(!!n.props)for(let a=0,i=A.length;a<i;a++){const r="on"+A[a].charAt(0).toUpperCase()+A[a].substr(1);n.props[r]&&e.on(A[a],o,n.props[r])}}function Ve(e,o,n){if(!!n.props)for(let a=0,i=A.length;a<i;a++){const r="on"+A[a].charAt(0).toUpperCase()+A[a].substr(1);n.props[r]&&e.off(A[a],o,n.props[r])}}function B(e,o,n,a,i){function r(){e.value&&(Ve(o.value,a.layerId,n.vnode),o.value.getLayer(a.layerId)&&o.value.removeLayer(a.layerId))}i.registerUnmountHandler(a.layerId,r),t.onBeforeUnmount(()=>{i.unregisterUnmountHandler(a.layerId),r()})}const me=t.defineComponent({name:"MglBackgroundLayer",mixins:[T],props:{layout:Object,paint:Object},setup(e){const o=t.inject(b);if(!o&&!e.source){t.warn("Background Layer: layer must be used inside source tag or source prop must be set");return}const n=t.inject(g),a=t.inject(y),i=t.inject(p),r=t.inject(S),s=w(i,e.source||o);t.watch([a,s],([c,f])=>{c&&(f||f===void 0)&&n.value.addLayer(P(e.layerId,"background",e,o),e.before||void 0)},{immediate:!0});function h(){a.value&&n.value.removeLayer(e.layerId)}r.registerUnmountHandler(e.layerId,h),t.onBeforeUnmount(()=>{h()})},render(){return t.createCommentVNode("Background Layer")}}),he=t.defineComponent({name:"MglCircleLayer",mixins:[T],props:{layout:Object,paint:Object},setup(e){const o=t.inject(b);if(!o&&!e.source){t.warn("Circle Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(g),i=t.inject(y),r=t.inject(p),s=t.inject(S),h=w(r,e.source||o);t.watch([i,h],([c,f])=>{c&&(f||f===void 0)&&(a.value.addLayer(P(e.layerId,"circle",e,o),e.before||void 0),v(a.value,e.layerId,n.vnode))},{immediate:!0}),B(i,a,n,e,s)},render(){return t.createCommentVNode("Circle Layer")}}),fe=t.defineComponent({name:"MglFillLayer",mixins:[T],props:{layout:Object,paint:Object},setup(e){const o=t.inject(b);if(!o&&!e.source){t.warn("Fill Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(g),i=t.inject(y),r=t.inject(p),s=t.inject(S),h=w(r,e.source||o);t.watch([i,h],([c,f])=>{c&&(f||f===void 0)&&(a.value.addLayer(P(e.layerId,"fill",e,o),e.before||void 0),v(a.value,e.layerId,n.vnode))},{immediate:!0}),B(i,a,n,e,s)},render(){return t.createCommentVNode("Fill Layer")}}),ge=t.defineComponent({name:"MglFillExtrusionLayer",mixins:[T],props:{layout:Object,paint:Object},setup(e){const o=t.inject(b);if(!o&&!e.source){t.warn("Fill Extrude Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(g),i=t.inject(y),r=t.inject(p),s=t.inject(S),h=w(r,e.source||o);t.watch([i,h],([c,f])=>{c&&(f||f===void 0)&&(a.value.addLayer(P(e.layerId,"fill-extrusion",e,o),e.before||void 0),v(a.value,e.layerId,n.vnode))},{immediate:!0}),B(i,a,n,e,s)},render(){return t.createCommentVNode("Fill Extrusion Layer")}}),ye=t.defineComponent({name:"MglHeatmapLayer",mixins:[T],props:{layout:Object,paint:Object},setup(e){const o=t.inject(b);if(!o&&!e.source){t.warn("Heatmap Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(g),i=t.inject(y),r=t.inject(p),s=t.inject(S),h=w(r,e.source||o);t.watch([i,h],([c,f])=>{c&&(f||f===void 0)&&(a.value.addLayer(P(e.layerId,"heatmap",e,o),e.before||void 0),v(a.value,e.layerId,n.vnode))},{immediate:!0}),B(i,a,n,e,s)},render(){return t.createCommentVNode("Heatmap Layer")}}),pe=t.defineComponent({name:"MglHillshadeLayer",mixins:[T],props:{layout:Object,paint:Object},setup(e){const o=t.inject(b);if(!o&&!e.source){t.warn("Hillshade Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(g),i=t.inject(y),r=t.inject(p),s=t.inject(S),h=w(r,e.source||o);t.watch([i,h],([c,f])=>{c&&(f||f===void 0)&&(a.value.addLayer(P(e.layerId,"hillshade",e,o),e.before||void 0),v(a.value,e.layerId,n.vnode))},{immediate:!0}),B(i,a,n,e,s)},render(){return t.createCommentVNode("Hillshade Layer")}}),be=t.defineComponent({name:"MglLineLayer",mixins:[T],props:{layout:Object,paint:Object},setup(e){const o=t.inject(b);if(!o&&!e.source){t.warn("Line Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(g),i=t.inject(y),r=t.inject(p),s=t.inject(S),h=w(r,e.source||o);t.watch([i,h],([c,f])=>{c&&(f||f===void 0)&&(a.value.addLayer(P(e.layerId,"line",e,o),e.before||void 0),v(a.value,e.layerId,n.vnode))},{immediate:!0}),B(i,a,n,e,s)},render(){return t.createCommentVNode("Line Layer")}}),Se=t.defineComponent({name:"MglRasterLayer",mixins:[T],props:{layout:Object,paint:Object},setup(e){const o=t.inject(b);if(!o&&!e.source){t.warn("Raster Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(g),i=t.inject(y),r=t.inject(p),s=t.inject(S),h=w(r,e.source||o);t.watch([i,h],([c,f])=>{c&&(f||f===void 0)&&(a.value.addLayer(P(e.layerId,"raster",e,o),e.before||void 0),v(a.value,e.layerId,n.vnode))},{immediate:!0}),B(i,a,n,e,s)},render(){return t.createCommentVNode("Raster Layer")}}),Ce=t.defineComponent({name:"MglSymbolLayer",mixins:[T],props:{layout:Object,paint:Object},setup(e){const o=t.inject(b);if(!o&&!e.source){t.warn("Symbol Layer: layer must be used inside source tag or source prop must be set");return}const n=t.getCurrentInstance(),a=t.inject(g),i=t.inject(y),r=t.inject(p),s=t.inject(S),h=w(r,e.source||o);t.watch([i,h],([c,f])=>{c&&(f||f===void 0)&&(a.value.addLayer(P(e.layerId,"symbol",e,o),e.before||void 0),v(a.value,e.layerId,n.vnode))},{immediate:!0}),B(i,a,n,e,s)},render(){return t.createCommentVNode("Symbol Layer")}}),He=Object.freeze(Object.defineProperty({__proto__:null,MglMap:q,MglAttributionControl:D,MglCustomControl:G,MglFullscreenControl:Y,MglFrameRateControl:K,MglGeolocationControl:J,MglNavigationControl:X,MglScaleControl:ee,MglStyleSwitchControl:oe,MglButton:Z,MglMarker:ne,MglCanvasSource:ie,MglGeoJsonSource:re,MglImageSource:le,MglRasterSource:se,MglRasterDemSource:ce,MglVectorSource:de,MglVideoSource:ue,MglBackgroundLayer:me,MglCircleLayer:he,MglFillLayer:fe,MglFillExtrusionLayer:ge,MglHeatmapLayer:ye,MglHillshadeLayer:pe,MglLineLayer:be,MglRasterLayer:Se,MglSymbolLayer:Ce},Symbol.toStringTag,{value:"Module"}));function we(e){Object.entries(He).forEach(([o,n])=>{e.component(o,n)})}return u.MglAttributionControl=D,u.MglBackgroundLayer=me,u.MglButton=Z,u.MglCanvasSource=ie,u.MglCircleLayer=he,u.MglCustomControl=G,u.MglDefaults=m,u.MglFillExtrusionLayer=ge,u.MglFillLayer=fe,u.MglFrameRateControl=K,u.MglFullscreenControl=Y,u.MglGeoJsonSource=re,u.MglGeolocationControl=J,u.MglHeatmapLayer=ye,u.MglHillshadeLayer=pe,u.MglImageSource=le,u.MglLineLayer=be,u.MglMap=q,u.MglMarker=ne,u.MglNavigationControl=X,u.MglRasterDemSource=ce,u.MglRasterLayer=Se,u.MglRasterSource=se,u.MglScaleControl=ee,u.MglStyleSwitchControl=oe,u.MglSymbolLayer=Ce,u.MglVectorSource=de,u.MglVideoSource=ue,u.Position=R,u.componentIdSymbol=p,u.default=we,u.emitterSymbol=j,u.install=we,u.isLoadedSymbol=y,u.mapSymbol=g,u.sourceIdSymbol=b,u.sourceLayerRegistry=S,u.useMap=Le,u.usePositionWatcher=x,Object.defineProperties(u,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}}),u}({},Vue,maplibregl);
//# sourceMappingURL=vue-maplibre-gl.min.js.map
